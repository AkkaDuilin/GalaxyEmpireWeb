{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from 'clsx';\r\nimport { twMerge } from 'tailwind-merge';\r\n//import { Active, DataRef, Over } from '@dnd-kit/core';\r\n//import { ColumnDragData } from '@/app/dashboard/kanban/_components/board-column';\r\n//import { TaskDragData } from '@/app/dashboard/kanban/_components/task-card';\r\n\r\n//type DraggableData = ColumnDragData | TaskDragData;\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;;;AAQO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,gKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Slot } from '@radix-ui/react-slot';\r\nimport { cva, type VariantProps } from 'class-variance-authority';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst buttonVariants = cva(\r\n  'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          'bg-primary text-primary-foreground shadow hover:bg-primary/90',\r\n        destructive:\r\n          'bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90',\r\n        outline:\r\n          'border border-input bg-transparent shadow-sm hover:bg-accent hover:text-accent-foreground',\r\n        secondary:\r\n          'bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80',\r\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\r\n        link: 'text-primary underline-offset-4 hover:underline'\r\n      },\r\n      size: {\r\n        default: 'h-9 px-4 py-2',\r\n        sm: 'h-8 rounded-md px-3 text-xs',\r\n        lg: 'h-10 rounded-md px-8',\r\n        icon: 'h-9 w-9'\r\n      }\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n      size: 'default'\r\n    }\r\n  }\r\n);\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : 'button';\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nButton.displayName = 'Button';\r\n\r\nexport { Button, buttonVariants };\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAMA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,qNACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,gNAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,wPAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/label.tsx"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport * as LabelPrimitive from '@radix-ui/react-label';\r\nimport { cva, type VariantProps } from 'class-variance-authority';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst labelVariants = cva(\r\n  'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\r\n);\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n));\r\nLabel.displayName = LabelPrimitive.Root.displayName;\r\n\r\nexport { Label };\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,gNAAM,UAAU,CAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,wPAAC,kKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,kKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/form.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport * as LabelPrimitive from '@radix-ui/react-label';\r\nimport { Slot } from '@radix-ui/react-slot';\r\nimport {\r\n  Controller,\r\n  ControllerProps,\r\n  FieldPath,\r\n  FieldValues,\r\n  FormProvider,\r\n  useFormContext\r\n} from 'react-hook-form';\r\n\r\nimport { cn } from '@/lib/utils';\r\nimport { Label } from '@/components/ui/label';\r\n\r\nconst Form = FormProvider;\r\n\r\ntype FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n> = {\r\n  name: TName;\r\n};\r\n\r\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n);\r\n\r\nconst FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  );\r\n};\r\n\r\nconst useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext);\r\n  const itemContext = React.useContext(FormItemContext);\r\n  const { getFieldState, formState } = useFormContext();\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState);\r\n\r\n  if (!fieldContext) {\r\n    throw new Error('useFormField should be used within <FormField>');\r\n  }\r\n\r\n  const { id } = itemContext;\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState\r\n  };\r\n};\r\n\r\ntype FormItemContextValue = {\r\n  id: string;\r\n};\r\n\r\nconst FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n);\r\n\r\nconst FormItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  const id = React.useId();\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <div\r\n        ref={ref}\r\n        className={cn('mb-2 space-y-2 lg:mb-0', className)}\r\n        {...props}\r\n      />\r\n    </FormItemContext.Provider>\r\n  );\r\n});\r\nFormItem.displayName = 'FormItem';\r\n\r\nconst FormLabel = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField();\r\n\r\n  return (\r\n    <Label\r\n      ref={ref}\r\n      className={cn(error && 'text-destructive', className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nFormLabel.displayName = 'FormLabel';\r\n\r\nconst FormControl = React.forwardRef<\r\n  React.ElementRef<typeof Slot>,\r\n  React.ComponentPropsWithoutRef<typeof Slot>\r\n>(({ ...props }, ref) => {\r\n  const { error, formItemId, formDescriptionId, formMessageId } =\r\n    useFormField();\r\n\r\n  return (\r\n    <Slot\r\n      ref={ref}\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nFormControl.displayName = 'FormControl';\r\n\r\nconst FormDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => {\r\n  const { formDescriptionId } = useFormField();\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formDescriptionId}\r\n      className={cn('text-[0.8rem] text-muted-foreground', className)}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nFormDescription.displayName = 'FormDescription';\r\n\r\nconst FormMessage = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, children, ...props }, ref) => {\r\n  const { error, formMessageId } = useFormField();\r\n  const body = error ? String(error?.message) : children;\r\n\r\n  if (!body) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formMessageId}\r\n      className={cn('text-[0.8rem] font-medium text-destructive', className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  );\r\n});\r\nFormMessage.displayName = 'FormMessage';\r\n\r\nexport {\r\n  useFormField,\r\n  Form,\r\n  FormItem,\r\n  FormLabel,\r\n  FormControl,\r\n  FormDescription,\r\n  FormMessage,\r\n  FormField\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          'flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50',\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nInput.displayName = 'Input';\r\n\r\nexport { Input };\r\n"],"names":[],"mappings":";;;;;;;;;;AAOA,MAAM,sBAAQ,gNAAM,UAAU,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,wPAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,yUACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/(auth)/_components/user-auth-form.tsx"],"sourcesContent":["'use client';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'sonner';\nimport { Button } from '@/components/ui/button';\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport * as z from 'zod';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { useRouter } from 'next/navigation';\nimport Image from 'next/image';\nimport { useState, useEffect } from 'react';\n\nconst API_BASE_URL = \"/api/v1\";  // 改回使用相对路径\n\nconst formSchema = z.object({\n  username: z.string().min(1, { message: 'Username is required' }),\n  password: z.string().min(6, { message: 'Password must be at least 6 characters' }),\n  captcha: z.string().min(1, { message: 'Captcha input is required' }),\n});\n\ntype UserFormValue = z.infer<typeof formSchema>;\n\ninterface CaptchaData {\n  captchaId: string;\n  captchaImg: string;\n}\n\nexport default function UserAuthForm() {\n  const [captcha, setCaptcha] = useState<CaptchaData | null>(null);\n  const router = useRouter();\n  \n  const getCaptcha = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/captcha`, {\n        method: 'GET',\n        credentials: 'include',\n      });\n      \n      if (!response.ok) throw new Error('Failed to fetch captcha');\n      \n      const data = await response.json();\n      console.log('Captcha response:', data);\n      \n      if (data.succeed && data.captcha_id) {\n        // 直接使用 captcha_id 构建图片 URL\n        const captchaImgUrl = `${API_BASE_URL}/captcha/${data.captcha_id}`;\n        \n        setCaptcha({\n          captchaId: data.captcha_id,\n          captchaImg: captchaImgUrl\n        });\n\n        console.log('Captcha state:', {\n          captchaId: data.captcha_id,\n          ccaptchaImg: captchaImgUrl\n        });\n      }\n      \n     \n    } catch (error) {\n      console.error('Captcha error:', error);\n      toast.error('Failed to load captcha');\n    }\n  };\n\n  useEffect(() => {\n    getCaptcha();\n  }, []);\n\n  const form = useForm<UserFormValue>({\n    resolver: zodResolver(formSchema),\n  });\n\n  const onSubmit = async (data: UserFormValue) => {\n    try {\n      if (!captcha?.captchaId) {\n        console.log('No captcha ID found');\n        throw new Error('Captcha not loaded');\n      }\n\n      console.log('Sending login request with:', {\n        username: data.username,\n        captchaId: captcha.captchaId,\n        userInput: data.captcha\n      });\n\n      const response = await fetch(`${API_BASE_URL}/login`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'captchaId': captcha.captchaId,\n          'userInput': data.captcha\n        },\n        body: JSON.stringify({\n          username: data.username,\n          password: data.password\n        })\n      });\n\n      console.log('Response status:', response.status);\n      const result = await response.json();\n      console.log('Full response data:', result);\n\n      if (!response.ok) {\n        const errorMessage = result.error || result.message || result.msg || 'Unknown error';\n        console.log('Error message:', errorMessage);\n\n        if (errorMessage.includes('record not found')) {\n          toast.error('Login failed: Username does not exist or incorrect password, please try again!');\n        } else if (errorMessage.includes('captcha')) {\n          toast.error('Login failed: Invalid captcha');\n        } else {\n          toast.error(`Login failed: ${errorMessage}`);\n        }\n        getCaptcha();\n        return;\n      }\n\n      if (result.token) {\n        localStorage.setItem('token', result.token);\n        localStorage.setItem('user', JSON.stringify(result.user));\n        toast.success('Login successful!');\n        router.push('/dashboard');\n      } else {\n        console.log('No token in successful response');\n        toast.error('Login failed: Invalid response format');\n        getCaptcha();\n      }\n\n    } catch (error) {\n      console.error('Login error:', error);\n      toast.error('Login failed: Please try again');\n      getCaptcha();\n    }\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n        {/* Username */}\n        <FormField\n          control={form.control}\n          name=\"username\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Username</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Enter your username...\" type=\"text\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Password */}\n        <FormField\n          control={form.control}\n          name=\"password\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Password</FormLabel>\n              <FormControl>\n                <Input placeholder=\"Enter your password...\" type=\"password\" {...field} />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        {/* Captcha */}\n        <FormField\n          control={form.control}\n          name=\"captcha\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Captcha</FormLabel>\n              <div className=\"flex gap-2\">\n                <FormControl>\n                  <Input placeholder=\"Enter captcha...\" {...field} />\n                </FormControl>\n                <div className=\"relative h-10 w-24 bg-white rounded-md overflow-hidden\">\n                  {captcha?.captchaImg && (\n                    <img\n                      src={`${captcha.captchaImg}`}\n                      alt=\"captcha\"\n                      className=\"h-full w-full cursor-pointer object-contain bg-white\"\n                      onClick={() => getCaptcha()}\n                    />\n                  )}\n                </div>\n              </div>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <Button type=\"submit\" className=\"w-full\">\n          Login\n        </Button>\n      </form>\n    </Form>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 602, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}