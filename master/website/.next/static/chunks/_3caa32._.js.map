{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from 'clsx';\r\nimport { twMerge } from 'tailwind-merge';\r\nimport { Active, DataRef, Over } from '@dnd-kit/core';\r\nimport { ColumnDragData } from '@/app/dashboard/kanban/_components/board-column';\r\nimport { TaskDragData } from '@/app/dashboard/kanban/_components/task-card';\r\n\r\ntype DraggableData = ColumnDragData | TaskDragData;\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n\r\nexport function hasDraggableData<T extends Active | Over>(\r\n  entry: T | null | undefined\r\n): entry is T & {\r\n  data: DataRef<DraggableData>;\r\n} {\r\n  if (!entry) {\r\n    return false;\r\n  }\r\n\r\n  const data = entry.data.current;\r\n\r\n  if (data?.type === 'Column' || data?.type === 'Task') {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport function formatBytes(\r\n  bytes: number,\r\n  opts: {\r\n    decimals?: number;\r\n    sizeType?: 'accurate' | 'normal';\r\n  } = {}\r\n) {\r\n  const { decimals = 0, sizeType = 'normal' } = opts;\r\n\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n  const accurateSizes = ['Bytes', 'KiB', 'MiB', 'GiB', 'TiB'];\r\n  if (bytes === 0) return '0 Byte';\r\n  const i = Math.floor(Math.log(bytes) / Math.log(1024));\r\n  return `${(bytes / Math.pow(1024, i)).toFixed(decimals)} ${\r\n    sizeType === 'accurate' ? accurateSizes[i] ?? 'Bytest' : sizes[i] ?? 'Bytes'\r\n  }`;\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;AAQO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,mKAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,SAAS,iBACd,KAA2B;IAI3B,IAAI,CAAC,OAAO;QACV,OAAO;IACT;IAEA,MAAM,OAAO,MAAM,IAAI,CAAC,OAAO;IAE/B,IAAI,MAAM,SAAS,YAAY,MAAM,SAAS,QAAQ;QACpD,OAAO;IACT;IAEA,OAAO;AACT;AAEO,SAAS,YACd,KAAa,EACb,OAGI,CAAC,CAAC;IAEN,MAAM,EAAE,WAAW,CAAC,EAAE,WAAW,QAAQ,EAAE,GAAG;IAE9C,MAAM,QAAQ;QAAC;QAAS;QAAM;QAAM;QAAM;KAAK;IAC/C,MAAM,gBAAgB;QAAC;QAAS;QAAO;QAAO;QAAO;KAAM;IAC3D,IAAI,UAAU,GAAG,OAAO;IACxB,MAAM,IAAI,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,SAAS,KAAK,GAAG,CAAC;IAChD,OAAO,CAAC,EAAE,CAAC,QAAQ,KAAK,GAAG,CAAC,MAAM,EAAE,EAAE,OAAO,CAAC,UAAU,CAAC,EACvD,aAAa,aAAa,aAAa,CAAC,EAAE,IAAI,WAAW,KAAK,CAAC,EAAE,IAAI,QACtE,CAAC;AACJ"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Slot } from '@radix-ui/react-slot';\r\nimport { cva, type VariantProps } from 'class-variance-authority';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst buttonVariants = cva(\r\n  'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          'bg-primary text-primary-foreground shadow hover:bg-primary/90',\r\n        destructive:\r\n          'bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90',\r\n        outline:\r\n          'border border-input bg-transparent shadow-sm hover:bg-accent hover:text-accent-foreground',\r\n        secondary:\r\n          'bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80',\r\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\r\n        link: 'text-primary underline-offset-4 hover:underline'\r\n      },\r\n      size: {\r\n        default: 'h-9 px-4 py-2',\r\n        sm: 'h-8 rounded-md px-3 text-xs',\r\n        lg: 'h-10 rounded-md px-8',\r\n        icon: 'h-9 w-9'\r\n      }\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n      size: 'default'\r\n    }\r\n  }\r\n);\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : 'button';\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nButton.displayName = 'Button';\r\n\r\nexport { Button, buttonVariants };\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAMA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,qNACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,8JAAM,UAAU,MAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/input.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          'flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50',\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nInput.displayName = 'Input';\r\n\r\nexport { Input };\r\n"],"names":[],"mappings":";;;;;;;;;;AAOA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,+GAAA,CAAA,KAAE,AAAD,EACV,yUACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/(auth)/_components/user-auth-form.tsx"],"sourcesContent":["'use client';\r\nimport { useForm } from 'react-hook-form';\r\nimport { toast } from 'sonner';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\r\nimport { Input } from '@/components/ui/input';\r\nimport * as z from 'zod';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { useRouter } from 'next/navigation';\r\n\r\nconst API_BASE_URL = 'http://localhost:9333/api/v1';\r\n\r\nconst formSchema = z.object({\r\n  username: z.string().min(1, { message: 'Username is required' }),\r\n  password: z.string().min(6, { message: 'Password must be at least 6 characters' }),\r\n  captcha: z.string().min(1, { message: 'Captcha input is required' }),\r\n});\r\n\r\ntype UserFormValue = z.infer<typeof formSchema>;\r\n\r\nexport default function UserAuthForm() {\r\n  const router = useRouter();\r\n  const form = useForm<UserFormValue>({\r\n    resolver: zodResolver(formSchema),\r\n  });\r\n\r\n  const onSubmit = async (data: UserFormValue) => {\r\n    try {\r\n      const captchaId = 'your-captcha-id'; // 假设验证码ID从后端获取\r\n\r\n      const response = await fetch(`${API_BASE_URL}/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'captchaId': captchaId, // 添加验证码ID\r\n          'userInput': data.captcha, // 验证码输入\r\n        },\r\n        body: JSON.stringify({\r\n          username: data.username,\r\n          password: data.password,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Login failed');\r\n      }\r\n\r\n      const { token, user } = await response.json();\r\n\r\n      // 存储 Token 和用户信息\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n\r\n      toast.success('Login Successful!');\r\n      router.push('/dashboard'); // 登录成功跳转\r\n    } catch (error) {\r\n      toast.error('Login Failed. Please check your credentials or captcha.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form {...form}>\r\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\r\n        {/* Username */}\r\n        <FormField\r\n          control={form.control}\r\n          name=\"username\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Username</FormLabel>\r\n              <FormControl>\r\n                <Input placeholder=\"Enter your username...\" type=\"text\" {...field} />\r\n              </FormControl>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n\r\n        {/* Password */}\r\n        <FormField\r\n          control={form.control}\r\n          name=\"password\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Password</FormLabel>\r\n              <FormControl>\r\n                <Input placeholder=\"Enter your password...\" type=\"password\" {...field} />\r\n              </FormControl>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n\r\n        {/* Captcha */}\r\n        <FormField\r\n          control={form.control}\r\n          name=\"captcha\"\r\n          render={({ field }) => (\r\n            <FormItem>\r\n              <FormLabel>Captcha</FormLabel>\r\n              <FormControl>\r\n                <Input placeholder=\"Enter captcha...\" type=\"text\" {...field} />\r\n              </FormControl>\r\n              <FormMessage />\r\n            </FormItem>\r\n          )}\r\n        />\r\n\r\n        <Button type=\"submit\" className=\"w-full\">\r\n          Login\r\n        </Button>\r\n      </form>\r\n    </Form>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}