definitions:
  account.accountResponse:
    properties:
      data:
        $ref: '#/definitions/models.AccountDTO'
      succeed:
        type: boolean
      traceID:
        type: string
    type: object
  account.userAccountResponse:
    properties:
      data:
        $ref: '#/definitions/models.UserDTO'
      succeed:
        type: boolean
      traceID:
        type: string
    type: object
  api.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
      succeed:
        type: boolean
      traceID:
        type: string
    type: object
  api.captchaResponse:
    properties:
      captcha_id:
        type: string
      succeed:
        type: boolean
      traceID:
        type: string
    type: object
  api.responseMessage:
    properties:
      message:
        type: string
    type: object
  auth.authResponse:
    properties:
      token:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Account:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      expireAt:
        type: string
      id:
        type: integer
      password:
        description: 'MD5 hash TODO:'
        type: string
      server:
        type: string
      tasks:
        items:
          $ref: '#/definitions/models.Task'
        type: array
      updatedAt:
        type: string
      userID:
        type: integer
      username:
        type: string
    type: object
  models.AccountDTO:
    properties:
      email:
        type: string
      expireAt:
        type: string
      id:
        type: integer
      server:
        type: string
      tasks:
        items:
          $ref: '#/definitions/models.TaskDTO'
        type: array
      username:
        type: string
    type: object
  models.Fleet:
    properties:
      bomb:
        type: integer
      bs:
        type: integer
      cargo:
        type: integer
      cr:
        type: integer
      createdAt:
        type: string
      de:
        type: integer
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      dr:
        type: integer
      ds:
        type: integer
      guard:
        type: integer
      hf:
        type: integer
      id:
        type: integer
      lf:
        type: integer
      satellite:
        type: integer
      task_id:
        type: integer
      updatedAt:
        type: string
    type: object
  models.Target:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      galaxy:
        type: integer
      id:
        type: integer
      is_moon:
        type: boolean
      planet:
        type: integer
      system:
        type: integer
      task_id:
        type: integer
      updatedAt:
        type: string
    type: object
  models.Task:
    properties:
      account_id:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      enabled:
        type: boolean
      fleet:
        $ref: '#/definitions/models.Fleet'
      id:
        type: integer
      name:
        type: string
      next_index:
        type: integer
      next_start:
        description: Unix timestamp seconds
        type: integer
      repeat:
        type: integer
      status:
        type: string
      target_num:
        type: integer
      targets:
        items:
          $ref: '#/definitions/models.Target'
        type: array
      task_type:
        type: integer
      updatedAt:
        type: string
    type: object
  models.TaskDTO:
    properties:
      account_id:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      enabled:
        type: boolean
      fleet:
        $ref: '#/definitions/models.Fleet'
      id:
        type: integer
      name:
        type: string
      next_index:
        type: integer
      next_start:
        type: string
      repeat:
        type: integer
      target_num:
        type: integer
      targets:
        items:
          $ref: '#/definitions/models.Target'
        type: array
      task_type:
        type: integer
      updatedAt:
        type: string
    type: object
  models.User:
    properties:
      accounts:
        items:
          $ref: '#/definitions/models.Account'
        type: array
      balance:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      password:
        description: 'NOTE: Checked in db, DO api check'
        type: string
      role:
        description: '0: normal user, 1: admin'
        type: integer
      updatedAt:
        type: string
      username:
        type: string
    type: object
  models.UserDTO:
    properties:
      accounts:
        items:
          $ref: '#/definitions/models.AccountDTO'
        type: array
      balance:
        type: integer
      id:
        type: integer
      username:
        type: string
    type: object
  task.accountTaskResponse:
    properties:
      data:
        $ref: '#/definitions/models.AccountDTO'
      succeed:
        type: boolean
      traceID:
        type: string
    type: object
  task.taskResponse:
    properties:
      data:
        $ref: '#/definitions/models.TaskDTO'
      succeed:
        type: boolean
      traceID:
        type: string
    type: object
  user.userResponse:
    properties:
      data:
        $ref: '#/definitions/models.UserDTO'
      succeed:
        type: boolean
    type: object
  user.usersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.UserDTO'
        type: array
      succeed:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /account:
    delete:
      consumes:
      - application/json
      description: Delete Account
      parameters:
      - description: Account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.Account'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with account data
          schema:
            $ref: '#/definitions/account.accountResponse'
        "400":
          description: Bad Request with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Delete Account
      tags:
      - account
    post:
      consumes:
      - application/json
      description: Create Account
      parameters:
      - description: Account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/models.Account'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with account data
          schema:
            $ref: '#/definitions/account.accountResponse'
        "400":
          description: Bad Request with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Create Account
      tags:
      - account
  /account/{id}:
    get:
      consumes:
      - application/json
      description: Get Account by ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with account data
          schema:
            $ref: '#/definitions/account.accountResponse'
        "400":
          description: Bad Request with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get account by ID
      tags:
      - account
  /account/user/{id}:
    get:
      consumes:
      - application/json
      description: Get Account by User ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with account data
          schema:
            $ref: '#/definitions/account.userAccountResponse'
        "400":
          description: Bad Request with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get account by User ID
      tags:
      - account
  /captcha:
    get:
      consumes:
      - application/json
      description: Get captcha
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.captchaResponse'
      summary: Get captcha
      tags:
      - Captcha
  /captcha/{captchaID}:
    get:
      consumes:
      - application/json
      description: Generate captcha picture
      parameters:
      - description: captchaID
        in: path
        name: captchaID
        required: true
        type: string
      produces:
      - image/png
      - application/json
      responses:
        "200":
          description: A captcha image is returned on success
          schema:
            type: file
        "404":
          description: If an error occurs, a JSON with error details is returned
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: If an error occurs, a JSON with error details is returned
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Generate captcha picture
      tags:
      - Captcha
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and generate JWT token
      parameters:
      - description: UserID and Password
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with JWT token
          schema:
            $ref: '#/definitions/auth.authResponse'
        "400":
          description: Bad request with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal server error with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: User Login
      tags:
      - auth
  /ping:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.responseMessage'
      summary: ping example
      tags:
      - example
  /task:
    post:
      consumes:
      - application/json
      description: Add a task
      parameters:
      - description: Task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.Task'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with task ID
          schema:
            $ref: '#/definitions/task.taskResponse'
        "400":
          description: Bad Request with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Add a task
      tags:
      - task
  /task/{id}:
    get:
      consumes:
      - application/json
      description: Get Task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with task data
          schema:
            $ref: '#/definitions/task.taskResponse'
        "400":
          description: Bad Request with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get task by ID
      tags:
      - task
  /task/account/{id}:
    get:
      consumes:
      - application/json
      description: Get Task by Account ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with account data
          schema:
            $ref: '#/definitions/task.accountTaskResponse'
        "400":
          description: Bad Request with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get task by Account ID
      tags:
      - task
  /user:
    delete:
      consumes:
      - application/json
      description: Delete User
      parameters:
      - description: User ID or Username
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user data
          schema:
            $ref: '#/definitions/user.userResponse'
        "400":
          description: Bad Request with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Delete user
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create User
      parameters:
      - description: User ID or Username
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user data
          schema:
            $ref: '#/definitions/user.userResponse'
        "400":
          description: Bad Request with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Create user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update User
      parameters:
      - description: User ID or Username
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user data
          schema:
            $ref: '#/definitions/user.userResponse'
        "400":
          description: Bad Request with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Update user
      tags:
      - user
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Get User by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user data
          schema:
            $ref: '#/definitions/user.userResponse'
        "400":
          description: Bad Request with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get user by ID
      tags:
      - user
  /user/balance:
    put:
      consumes:
      - application/json
      description: Update a user balance
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user data
          schema:
            $ref: '#/definitions/user.userResponse'
        "400":
          description: Bad Request with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "404":
          description: Not Found with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Update a user balance
      tags:
      - user
  /users:
    get:
      consumes:
      - application/json
      description: Get all Users
      produces:
      - application/json
      responses:
        "200":
          description: Successful response with user data
          schema:
            $ref: '#/definitions/user.usersResponse'
        "400":
          description: Bad Request with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal Server Error with error message
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get all users
      tags:
      - user
swagger: "2.0"
